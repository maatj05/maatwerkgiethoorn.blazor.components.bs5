name: Build and Publish NuGet Packages

on:
  push:
    branches:
      - master  # Trigger on push to the master branch

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      PACKAGE_VERSION: 1.0.0  # Define the version as a variable
      SOLUTION_FILE: maatwerkgiethoorn.blazor.components.bs5.sln  # Define the solution file as a variable

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Set up .NET SDK (version 8.0.x)
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      # Step 3: Restore dependencies for the solution using the solution variable
      - name: Restore dependencies
        run: dotnet restore ${{ env.SOLUTION_FILE }}

      # Step 4: Build the solution using the solution variable
      - name: Build the solution
        run: dotnet build ${{ env.SOLUTION_FILE }} --configuration Release --no-restore

      # Step 5: Pack all projects in the Src folder, using the version variable

      - name: Pack 
        run: dotnet pack Src/maatwerkgiethoorn.blazor.components.bs5.csproj  --configuration Release --no-build -p:PackageVersion=${{ env.PACKAGE_VERSION }}
     


      # Step 6: Push the packages to NuGet
      - name: Push packages to NuGet
        run: dotnet nuget push Src/**/*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json
        env:
          NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}  # NuGet API key stored in GitHub Secrets